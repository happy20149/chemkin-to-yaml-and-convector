  main.cpp
D:\vs2022\VC\Tools\MSVC\14.43.34808\include\any(12): warning STL4038: The contents of <any> are available only with C++17 or later.
D:\vs2022\VC\Tools\MSVC\14.43.34808\include\filesystem(12): warning STL4038: The contents of <filesystem> are available only with C++17 or later.
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(80,10): error C2039: "any": 不是 "std" 的成员
  (编译源文件“main.cpp”)
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\iostream(19,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(80,14): error C3646: “m_value”: 未知重写说明符
  (编译源文件“main.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(80,10): error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int
  (编译源文件“main.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(33,42): error C2614: “AnyValue”: 非法的成员初始化:“m_value”不是基或成员
  (编译源文件“main.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(34,30): error C2614: “AnyValue”: 非法的成员初始化:“m_value”不是基或成员
  (编译源文件“main.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(35,27): error C2614: “AnyValue”: 非法的成员初始化:“m_value”不是基或成员
  (编译源文件“main.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(36,32): error C2614: “AnyValue”: 非法的成员初始化:“m_value”不是基或成员
  (编译源文件“main.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(37,28): error C2614: “AnyValue”: 非法的成员初始化:“m_value”不是基或成员
  (编译源文件“main.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(38,50): error C2614: “AnyValue”: 非法的成员初始化:“m_value”不是基或成员
  (编译源文件“main.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(39,55): error C2614: “AnyValue”: 非法的成员初始化:“m_value”不是基或成员
  (编译源文件“main.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(40,52): error C2614: “AnyValue”: 非法的成员初始化:“m_value”不是基或成员
  (编译源文件“main.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(44,36): error C2065: “m_value”: 未声明的标识符
  (编译源文件“main.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(45,36): error C2065: “m_value”: 未声明的标识符
  (编译源文件“main.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(46,33): error C2065: “m_value”: 未声明的标识符
  (编译源文件“main.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(47,34): error C2065: “m_value”: 未声明的标识符
  (编译源文件“main.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyMap.h(88,50): error C2614: “AnyValue”: 非法的成员初始化:“m_value”不是基或成员
  (编译源文件“main.cpp”)
  
  YamlReader.cpp
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(1,1): warning C4819: 该文件包含不能在当前代码页(936)中表示的字符。请将该文件保存为 Unicode 格式以防止数据丢失
D:\vs2022\VC\Tools\MSVC\14.43.34808\include\any(12): warning STL4038: The contents of <any> are available only with C++17 or later.
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(80,10): error C2039: "any": 不是 "std" 的成员
  (编译源文件“YamlReader.cpp”)
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\iostream(19,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(80,14): error C3646: “m_value”: 未知重写说明符
  (编译源文件“YamlReader.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(80,10): error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int
  (编译源文件“YamlReader.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(33,42): error C2614: “AnyValue”: 非法的成员初始化:“m_value”不是基或成员
  (编译源文件“YamlReader.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(34,30): error C2614: “AnyValue”: 非法的成员初始化:“m_value”不是基或成员
  (编译源文件“YamlReader.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(35,27): error C2614: “AnyValue”: 非法的成员初始化:“m_value”不是基或成员
  (编译源文件“YamlReader.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(36,32): error C2614: “AnyValue”: 非法的成员初始化:“m_value”不是基或成员
  (编译源文件“YamlReader.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(37,28): error C2614: “AnyValue”: 非法的成员初始化:“m_value”不是基或成员
  (编译源文件“YamlReader.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(38,50): error C2614: “AnyValue”: 非法的成员初始化:“m_value”不是基或成员
  (编译源文件“YamlReader.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(39,55): error C2614: “AnyValue”: 非法的成员初始化:“m_value”不是基或成员
  (编译源文件“YamlReader.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(40,52): error C2614: “AnyValue”: 非法的成员初始化:“m_value”不是基或成员
  (编译源文件“YamlReader.cpp”)
  
D:\vs2022\VC\Tools\MSVC\14.43.34808\include\filesystem(12): warning STL4038: The contents of <filesystem> are available only with C++17 or later.
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(44,36): error C2065: “m_value”: 未声明的标识符
  (编译源文件“YamlReader.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(45,36): error C2065: “m_value”: 未声明的标识符
  (编译源文件“YamlReader.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(46,33): error C2065: “m_value”: 未声明的标识符
  (编译源文件“YamlReader.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyValue.h(47,34): error C2065: “m_value”: 未声明的标识符
  (编译源文件“YamlReader.cpp”)
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\AnyMap.h(88,50): error C2614: “AnyValue”: 非法的成员初始化:“m_value”不是基或成员
  (编译源文件“YamlReader.cpp”)
  
  Defining YAML_CPP_API for DLL import
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\packages\fluid.yaml-cpp.1.0.10\build\include\yaml-cpp\parser.h(85,28): warning C4251: “YAML::Parser::m_pScanner”:“std::unique_ptr<YAML::Scanner,std::default_delete<YAML::Scanner>>”需要有 dll 接口以供“YAML::Parser”的客户端使用
  (编译源文件“YamlReader.cpp”)
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<YAML::Scanner,std::default_delete<YAML::Scanner>>”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\packages\fluid.yaml-cpp.1.0.10\build\include\yaml-cpp\parser.h(86,31): warning C4251: “YAML::Parser::m_pDirectives”:“std::unique_ptr<YAML::Directives,std::default_delete<YAML::Directives>>”需要有 dll 接口以供“YAML::Parser”的客户端使用
  (编译源文件“YamlReader.cpp”)
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<YAML::Directives,std::default_delete<YAML::Directives>>”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\packages\fluid.yaml-cpp.1.0.10\build\include\yaml-cpp\binary.h(65,30): warning C4251: “YAML::Binary::m_data”:“std::vector<unsigned char,std::allocator<unsigned char>>”需要有 dll 接口以供“YAML::Binary”的客户端使用
  (编译源文件“YamlReader.cpp”)
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<unsigned char,std::allocator<unsigned char>>”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\packages\fluid.yaml-cpp.1.0.10\build\include\yaml-cpp\ostream_wrapper.h(49,29): warning C4251: “YAML::ostream_wrapper::m_buffer”:“std::vector<char,std::allocator<char>>”需要有 dll 接口以供“YAML::ostream_wrapper”的客户端使用
  (编译源文件“YamlReader.cpp”)
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<char,std::allocator<char>>”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\packages\fluid.yaml-cpp.1.0.10\build\include\yaml-cpp\emitter.h(132,33): warning C4251: “YAML::Emitter::m_pState”:“std::unique_ptr<YAML::EmitterState,std::default_delete<YAML::EmitterState>>”需要有 dll 接口以供“YAML::Emitter”的客户端使用
  (编译源文件“YamlReader.cpp”)
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\memory(3332,7):
      参见“std::unique_ptr<YAML::EmitterState,std::default_delete<YAML::EmitterState>>”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\packages\fluid.yaml-cpp.1.0.10\build\include\yaml-cpp\exceptions.h(153,44): warning C4275: 非 dll 接口 class“std::runtime_error”用作 dll 接口 class“YAML::Exception”的基
  (编译源文件“YamlReader.cpp”)
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\stdexcept(100,19):
      参见“std::runtime_error”的声明
      E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\packages\fluid.yaml-cpp.1.0.10\build\include\yaml-cpp\exceptions.h(153,20):
      参见“YAML::Exception”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\packages\fluid.yaml-cpp.1.0.10\build\include\yaml-cpp\exceptions.h(162,15): warning C4251: “YAML::Exception::msg”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“YAML::Exception”的客户端使用
  (编译源文件“YamlReader.cpp”)
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\packages\fluid.yaml-cpp.1.0.10\build\include\yaml-cpp\node\node.h(135,15): warning C4251: “YAML::Node::m_invalidKey”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“YAML::Node”的客户端使用
  (编译源文件“YamlReader.cpp”)
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\packages\fluid.yaml-cpp.1.0.10\build\include\yaml-cpp\node\node.h(136,40): warning C4251: “YAML::Node::m_pMemory”:“std::shared_ptr<YAML::detail::memory_holder>”需要有 dll 接口以供“YAML::Node”的客户端使用
  (编译源文件“YamlReader.cpp”)
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<YAML::detail::memory_holder>”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\packages\fluid.yaml-cpp.1.0.10\build\include\yaml-cpp\node\detail\memory.h(31,9): warning C4251: “YAML::detail::memory::m_nodes”:“std::set<YAML::detail::shared_node,std::less<YAML::detail::shared_node>,std::allocator<YAML::detail::shared_node>>”需要有 dll 接口以供“YAML::detail::memory”的客户端使用
  (编译源文件“YamlReader.cpp”)
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\set(51,7):
      参见“std::set<YAML::detail::shared_node,std::less<YAML::detail::shared_node>,std::allocator<YAML::detail::shared_node>>”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\packages\fluid.yaml-cpp.1.0.10\build\include\yaml-cpp\node\detail\memory.h(42,17): warning C4251: “YAML::detail::memory_holder::m_pMemory”:“std::shared_ptr<YAML::detail::memory>”需要有 dll 接口以供“YAML::detail::memory_holder”的客户端使用
  (编译源文件“YamlReader.cpp”)
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\memory(1557,7):
      参见“std::shared_ptr<YAML::detail::memory>”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\packages\fluid.yaml-cpp.1.0.10\build\include\yaml-cpp\node\detail\node_data.h(104,15): warning C4251: “YAML::detail::node_data::m_tag”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“YAML::detail::node_data”的客户端使用
  (编译源文件“YamlReader.cpp”)
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\packages\fluid.yaml-cpp.1.0.10\build\include\yaml-cpp\node\detail\node_data.h(108,15): warning C4251: “YAML::detail::node_data::m_scalar”:“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”需要有 dll 接口以供“YAML::detail::node_data”的客户端使用
  (编译源文件“YamlReader.cpp”)
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\xstring(522,7):
      参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\packages\fluid.yaml-cpp.1.0.10\build\include\yaml-cpp\node\detail\node_data.h(112,12): warning C4251: “YAML::detail::node_data::m_sequence”:“std::vector<YAML::detail::node *,std::allocator<YAML::detail::node *>>”需要有 dll 接口以供“YAML::detail::node_data”的客户端使用
  (编译源文件“YamlReader.cpp”)
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<YAML::detail::node *,std::allocator<YAML::detail::node *>>”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\packages\fluid.yaml-cpp.1.0.10\build\include\yaml-cpp\node\detail\node_data.h(118,12): warning C4251: “YAML::detail::node_data::m_map”:“std::vector<std::pair<YAML::detail::node *,YAML::detail::node *>,std::allocator<std::pair<YAML::detail::node *,YAML::detail::node *>>>”需要有 dll 接口以供“YAML::detail::node_data”的客户端使用
  (编译源文件“YamlReader.cpp”)
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\vector(429,7):
      参见“std::vector<std::pair<YAML::detail::node *,YAML::detail::node *>,std::allocator<std::pair<YAML::detail::node *,YAML::detail::node *>>>”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\packages\fluid.yaml-cpp.1.0.10\build\include\yaml-cpp\node\detail\node_data.h(122,20): warning C4251: “YAML::detail::node_data::m_undefinedPairs”:“std::list<YAML::detail::node_data::kv_pair,std::allocator<std::pair<YAML::detail::node *,YAML::detail::node *>>>”需要有 dll 接口以供“YAML::detail::node_data”的客户端使用
  (编译源文件“YamlReader.cpp”)
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\list(759,7):
      参见“std::list<YAML::detail::node_data::kv_pair,std::allocator<std::pair<YAML::detail::node *,YAML::detail::node *>>>”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(13,12): error C2065: “m_value”: 未声明的标识符
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(14,9): error C2065: “m_value”: 未声明的标识符
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(15,9): error C2065: “m_value”: 未声明的标识符
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(19,12): error C2065: “m_value”: 未声明的标识符
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(24,21): error C2039: "any_cast": 不是 "std" 的成员
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\algorithm(195,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(24,21): error C2065: “any_cast”: 未声明的标识符
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(24,30): error C2059: 语法错误:“const”
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(26,23): error C2039: "bad_any_cast": 不是 "std" 的成员
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\algorithm(195,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(26,12): error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(26,35): error C2143: 语法错误: 缺少“,”(在“&”的前面)
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(34,21): error C2039: "any_cast": 不是 "std" 的成员
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\algorithm(195,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(34,21): error C2065: “any_cast”: 未声明的标识符
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(34,30): error C2062: 意外的类型“double” 
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(36,23): error C2039: "bad_any_cast": 不是 "std" 的成员
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\algorithm(195,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(36,12): error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(36,35): error C2143: 语法错误: 缺少“,”(在“&”的前面)
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(38,13): error C2065: “m_value”: 未声明的标识符
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(39,45): error C2039: "any_cast": 不是 "std" 的成员
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\algorithm(195,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(39,45): error C2065: “any_cast”: 未声明的标识符
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(39,54): error C2062: 意外的类型“long” 
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(39,54): error C2144: 语法错误:“long”的前面应有“(”
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(48,21): error C2039: "any_cast": 不是 "std" 的成员
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\algorithm(195,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(48,21): error C2065: “any_cast”: 未声明的标识符
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(48,30): error C2062: 意外的类型“long” 
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(50,23): error C2039: "bad_any_cast": 不是 "std" 的成员
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\algorithm(195,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(50,12): error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(50,35): error C2143: 语法错误: 缺少“,”(在“&”的前面)
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(58,21): error C2039: "any_cast": 不是 "std" 的成员
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\algorithm(195,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(58,21): error C2065: “any_cast”: 未声明的标识符
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(58,30): error C2062: 意外的类型“bool” 
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(60,23): error C2039: "bad_any_cast": 不是 "std" 的成员
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\algorithm(195,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(60,12): error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(60,35): error C2143: 语法错误: 缺少“,”(在“&”的前面)
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(68,21): error C2039: "any_cast": 不是 "std" 的成员
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\algorithm(195,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(68,21): error C2065: “any_cast”: 未声明的标识符
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(68,30): error C2059: 语法错误:“const”
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(70,23): error C2039: "bad_any_cast": 不是 "std" 的成员
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\algorithm(195,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(70,12): error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(70,35): error C2143: 语法错误: 缺少“,”(在“&”的前面)
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(78,21): error C2039: "any_cast": 不是 "std" 的成员
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\algorithm(195,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(78,21): error C2065: “any_cast”: 未声明的标识符
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(78,30): error C2059: 语法错误:“const”
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(80,23): error C2039: "bad_any_cast": 不是 "std" 的成员
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\algorithm(195,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(80,12): error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(80,35): error C2143: 语法错误: 缺少“,”(在“&”的前面)
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(88,21): error C2039: "any_cast": 不是 "std" 的成员
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\algorithm(195,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(88,21): error C2065: “any_cast”: 未声明的标识符
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(88,30): error C2059: 语法错误:“const”
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(90,23): error C2039: "bad_any_cast": 不是 "std" 的成员
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\algorithm(195,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(90,12): error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(90,35): error C2143: 语法错误: 缺少“,”(在“&”的前面)
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(98,21): error C2039: "any_cast": 不是 "std" 的成员
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\algorithm(195,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(98,21): error C2065: “any_cast”: 未声明的标识符
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(98,30): error C2059: 语法错误:“const”
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(100,23): error C2039: "bad_any_cast": 不是 "std" 的成员
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\algorithm(195,1):
      参见“std”的声明
  
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(100,12): error C4430: 缺少类型说明符 - 假定为 int。注意: C++ 不支持默认 int
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(100,35): error C2143: 语法错误: 缺少“,”(在“&”的前面)
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(112,13): error C2065: “m_value”: 未声明的标识符
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(113,13): error C2065: “m_value”: 未声明的标识符
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(114,13): error C2065: “m_value”: 未声明的标识符
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(316,23): error C2429: 语言功能 "结构化绑定" 需要编译器标志 "/std:c++17"
E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(317,9): error C2593: “operator <<”不明确
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(480,39):
      可能是“std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(std::basic_streambuf<char,std::char_traits<char>> *)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(448,39):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(const void *)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(430,39):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(long double)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(412,39):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(double)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(394,39):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(float)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(376,39):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(unsigned __int64)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(358,39):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(__int64)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(340,39):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(unsigned long)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(322,39):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(long)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(303,39):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(unsigned int)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(277,39):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(int)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(258,39):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(unsigned short)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(224,39):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(short)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(206,39):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(bool)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(200,39):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(std::ios_base &(__cdecl *)(std::ios_base &))”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(194,39):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(std::basic_ios<char,std::char_traits<char>> &(__cdecl *)(std::basic_ios<char,std::char_traits<char>> &))”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(189,39):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(std::basic_ostream<char,std::char_traits<char>> &(__cdecl *)(std::basic_ostream<char,std::char_traits<char>> &))”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(688,32):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::operator <<<char,std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,const char *)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(732,32):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::operator <<<char,std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(768,31):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::operator <<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,const char *)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(813,31):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::operator <<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(930,31):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::operator <<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,const signed char *)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(936,31):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::operator <<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,signed char)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(941,31):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::operator <<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,const unsigned char *)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(947,31):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::operator <<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,unsigned char)”
      D:\vs2022\VC\Tools\MSVC\14.43.34808\include\__msvc_ostream.hpp(1031,32):
      或    “std::basic_ostream<char,std::char_traits<char>> &std::operator <<<char,std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,const std::error_code &)”
      E:\Chemkin-to-Yaml\cantera-yaml文件解析器\yaml-convector\yaml-convector\YamlReader.cpp(317,9):
      尝试匹配参数列表“(std::ostringstream, unknown-type)”时
  
